{
  "name": "latlong",
  "version": "0.1.1",
  "description": "create a kdtree from lat/long and return the closest points",
  "main": "index.js",
  "dependencies": {
    "kdt": "0.1.0"
  },
  "devDependencies": {
    "tap": "0.4.0"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/st-luke/node-latlong"
  },
  "keywords": [
    "latitude",
    "longitude",
    "kdtree",
    "coordinates"
  ],
  "author": {
    "name": "Luke Arduini",
    "email": "luke.arduini@gmail.com"
  },
  "license": "MIT",
  "readme": "# Name\n### latlong\n\n# Synopsis\nCreate a simple k-d tree from lat/long and return the closest points.\n\n# Description\nCreate a 2-dimensional k-d tree from latitude & longitude coordinate and return the closest points to the specified location.\n\n# Example\n\n```javascript\nvar latlong = require('latlong')\n\nvar coords = [\n{lat: '40.739683', long: '73.985151', name: 'Gramercy Theatre'},\n{lat: '40.730601', long: '74.000447', name: 'Blue Note Jazz Club'},\n{lat: '40.742256', long: '74.006344', name: 'Milk Studios'},\n{lat: '40.691805', long: '73.908089', name: 'Greenroom Brooklyn'}\n]\n\n\nvar close = latlong(coords, {loc: {lat: 40, long: 50}, max: 50})\n\n\nconsole.log(close.reverse())\n```\n\n# Install:\n`npm install latlong`\n\n# Test:\n`npm test`\n\n##Motivation:\nI found myself writing this logic inline in my app. It's quite simple, but it was generic enough that I could justify splitting it out.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/st-luke/node-latlong/issues"
  },
  "homepage": "https://github.com/st-luke/node-latlong",
  "_id": "latlong@0.1.1",
  "_shasum": "c01953b662faaa481f6637d8501e9ee992e275cf",
  "_from": "latlong@",
  "_resolved": "https://registry.npmjs.org/latlong/-/latlong-0.1.1.tgz"
}
